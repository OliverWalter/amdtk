#!/usr/bin/env python

"""Compute the per-frame state posteriors (without forward-backward)."""

import argparse
import pickle
import amdtk
from numpy import sqrt, log


def main(script_args=None):
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--hmm_states', action='store_true',
                        help='output the hmm states posteriors')
    parser.add_argument('--htk_trick', action='store_true',
                        help='posteriors for HTK lattices')
    parser.add_argument('model', help='model to fit on the data')
    parser.add_argument('feats', help='features of the utterance')
    parser.add_argument('out', help='HTK binary file')
    args = parser.parse_args(script_args)

    # Load the unit-loop model.
    with open(args.model, 'rb') as f:
        model = pickle.load(f)

    # Load the features.
    X, infos = amdtk.readHtk(args.feats, infos=True)

    # Compute GMMs posteriors.
    p = amdtk.phoneLoopPosteriors(model, X, output_states=args.hmm_states)

    # Dirty trick to use these posterior with HTK later on.
    if args.htk_trick:
        p = sqrt(-2 * log(p.clip(min=1e-10)))

    # Dump the posteriors on the disk.
    amdtk.writeHtk(args.out, p, infos[1])

if __name__ == '__main__':
    main()

#!/usr/bin/env python

"""Run a list of job on the parallel environment."""

import argparse
import amdtk


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--profile', default='~/.profile',
                        help='profile script to load before to run the job')
    parser.add_argument('--ntasks', type=int, default=200,
                        help='maximum number of concurrent tasks')
    parser.add_argument('--options', help='the SGE options')
    parser.add_argument('--python_script', action='store_true',
                        help='is importable python script with main function')
    parser.add_argument('name', help='name of the task on the SGE')
    parser.add_argument('list', help='list of files to process')
    parser.add_argument('cmd', help='the general command to execute')
    parser.add_argument('outdir', help='the output directory')
    args = parser.parse_args()

    # Retrieve the parallel environment.
    env = amdtk.ParallelEnv.getEnvironment()

    # Prepare the directory structure.
    env.prepareOutputDirectory(args.outdir)

    # Estimate the repartition of the load per job.
    env.computeTaskLoad(args.list, args.ntasks)

    # Prepare the script to be executed in the parallel environment.
    env.prepareScript(args.name, args.cmd, args.options, 
                      args.profile, args.python_script)

    # Run the jobs.
    failed = env.run()

    if failed > 0:
        print(failed, 'job(s) have failed')
        exit(1)

if __name__ == '__main__':
    main()
else:
    raise ImportError('this script cannot be imported')

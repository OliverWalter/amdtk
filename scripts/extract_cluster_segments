#!/usr/bin/env python
import os
import subprocess
import argparse
import glob
import shutil


def read_wav_scp(wav_file):
    wav_list = dict()
    with open(wav_file) as fid:
        for entry in fid.readlines():
            file_descriptor, key = entry.strip().split(':')
            file = file_descriptor.split('[')[0]
            wav_list[key] = file
    return wav_list


def extract_segments(clusters_file, wav_list, out_dir, file_type):
    with open(clusters_file) as fid:
        for line in fid.readlines():
            line_split = line.split()
            if len(line_split) > 1 and line_split[0] == 'Class':
                dir_name = os.path.join(out_dir, '_'.join(line_split))
                os.makedirs(dir_name, exist_ok=True)
            elif len(line_split) == 3:
                wav_file = wav_list[line_split[0]]
                start = line_split[1]
                end = line_split[2]
                segment_file = os.path.join(dir_name, '_'.join(line_split) + '.wav')
                if file_type == 'NIST_SPHERE':
                    args = ['sph2pipe', '-f', 'wav', '-t', start + ':' + end, wav_file, segment_file]
                else:
                    args = ['sox', wav_file, segment_file, 'trim {} ={}'.format(start, end)]
                subprocess.call(' '.join(args), shell=True)


def move_single_clusters(base_dir):
    single_dir = os.path.join(base_dir, 'Single')
    os.makedirs(single_dir, exist_ok=True)
    for current_dir in glob.glob(os.path.join(base_dir, 'Class_*')):
        if len(os.listdir(current_dir)) == 1:
            shutil.move(current_dir, single_dir)


def main(script_args=None):
    parser = argparse.ArgumentParser()
    parser.add_argument('clusters_file', help='Input clusters file')
    parser.add_argument('wav_scp', help='wav scp file')
    parser.add_argument('out_dir', help='Output directory')
    parser.add_argument('--file_type', default='WAV',
                        help='File type, NIST_SPHERE or WAV (default)')
    args = parser.parse_args(script_args)

    wav_list = read_wav_scp(args.wav_scp)
    extract_segments(args.clusters_file, wav_list, args.out_dir, args.file_type)
    move_single_clusters(args.out_dir)


if __name__ == '__main__':
    main()
